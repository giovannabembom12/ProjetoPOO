package com.model.dao;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.view.AluguelServicos;

public class AluguelServicosDAO {
    private Connection conexao; 

    public AluguelServicosDAO(Connection conexao) {
        this.conexao = conexao;
    }

    // Inserir um novo serviço no banco de dados
    public void inserirServico(AluguelServicos servico) throws SQLException {
        String sql = "INSERT INTO tbaluguelservicos (codigo, nome, quantidade, valorUnit) VALUES (?, ?, ?, ?)";

        try (PreparedStatement ps = conexao.prepareStatement(sql)) {
            ps.setInt(1, servico.getCodigo());
            ps.setString(2, servico.getNome());
            ps.setInt(3, servico.getQuantidade());
            ps.setFloat(4, servico.getValorUnit());
            ps.executeUpdate();
        }
    }

    // Atualizar um serviço no banco de dados
    public void atualizarServico(AluguelServicos servico) throws SQLException {
        String sql = "UPDATE servicos SET nome = ?, quantidade = ?, valorUnit = ? WHERE codigo = ?";

        try (PreparedStatement ps = conexao.prepareStatement(sql)) {
            ps.setString(1, servico.getNome());
            ps.setInt(2, servico.getQuantidade());
            ps.setDouble(3, servico.getValorUnit());
            ps.setInt(4, servico.getCodigo());
            ps.executeUpdate();
        }
    }

    // Consultar um serviço pelo código
    public AluguelServicos consultarServicoPorCodigo(int codigo) throws SQLException {
        String sql = "SELECT codigo, nome, quantidade, valorUnit FROM servicos WHERE codigo = ?";

        try (PreparedStatement ps = conexao.prepareStatement(sql)) {
            ps.setInt(1, codigo);
            try (ResultSet rs = ps.executeQuery()) {
                if (rs.next()) {
                    String nome = rs.getString("nome");
                    float valorUnitario = rs.getFloat("valorUnit");
                    int quantidade = rs.getInt("quantidade");
                    return new AluguelServicos();
                }
            }
        }

        return null; // Retorna null se o serviço não for encontrado
    }

    // Consultar todos os serviços
    public List<AluguelServicos> consultarTodosServicos() throws SQLException {
        List<AluguelServicos> servicos = new ArrayList<>();
        String sql = "SELECT codigo, nome, quantidade, valor_unitario FROM tbaluguelservicos";

        try (PreparedStatement ps = conexao.prepareStatement(sql);
             ResultSet rs = ps.executeQuery()) {
            while (rs.next()) {
                int codigo = rs.getInt("codigo");
                String nome = rs.getString("nome");
                int quantidade = rs.getInt("quantidade");
                float valorUnitario = rs.getFloat("valorUnit");
                servicos.add(new AluguelServicos());
            }
        }

        return servicos;
    }
}
