package com.model.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import com.model.vo.AluguelVO;
import com.model.dao.Conexao;
import javax.swing.JOptionPane;
import com.view.Aluguel;

public class AluguelDAO {
	private Connection conexao;

	public AluguelDAO() {
		this.conexao = conexao;
	}

	public void inserirServico(AluguelVO servico) throws SQLException {
		String sql = "INSERT INTO tbaluguelservicos (codigo, nome, quantidade, valorUnit) VALUES (?, ?, ?, ?)";

		try (PreparedStatement ps = conexao.prepareStatement(sql)) {
			ps.setInt(1, servico.getCodigo());
			ps.setString(2, servico.getNome());
			ps.setInt(3, servico.getQuantidade());
			ps.setDouble(4, servico.getValorUnit());
			ps.executeUpdate();
		}
	}

	public void atualizarServico(AluguelVO servico) throws SQLException {
		String sql = "UPDATE servicos SET nome = ?, quantidade = ?, valorUnit = ? WHERE codigo = ?";

		try (PreparedStatement ps = conexao.prepareStatement(sql)) {
			ps.setString(1, servico.getNome());
			ps.setInt(2, servico.getQuantidade());
			ps.setDouble(3, servico.getValorUnit());
			ps.setInt(4, servico.getCodigo());
			ps.executeUpdate();
		}
	}

	public Aluguel consultarServicoPorCodigo(int codigo) throws SQLException {
		String sql = "SELECT codigo, nome, quantidade, valorUnit FROM servicos WHERE codigo = ?";

		try (PreparedStatement ps = conexao.prepareStatement(sql)) {
			ps.setInt(1, codigo);
			try (ResultSet rs = ps.executeQuery()) {
				if (rs.next()) {
					String nome = rs.getString("nome");
					float valorUnitario = rs.getFloat("valorUnit");
					int quantidade = rs.getInt("quantidade");
					return new Aluguel();
				}
			}
		}

		return null;
	}

	public List<Aluguel> consultarTodosServicos() throws SQLException {
		List<Aluguel> servicos = new ArrayList<>();
		String sql = "SELECT codigo, nome, quantidade, valor_unitario FROM tbaluguelservicos";

		try (PreparedStatement ps = conexao.prepareStatement(sql); ResultSet rs = ps.executeQuery()) {
			while (rs.next()) {
				int codigo = rs.getInt("codigo");
				String nome = rs.getString("nome");
				int quantidade = rs.getInt("quantidade");
				float valorUnitario = rs.getFloat("valorUnit");
				servicos.add(new Aluguel());
			}
		}

		return servicos;
	}

	public List<Aluguel> listaAluguelServicos(int venda_id) {

		try {

			List<Aluguel> lista = new ArrayList<>();
			String sql = "select i.id, p.descricao, i.qtd, p.preco, i.subtotal from tb_itensvendas as i "
					+ " inner join tb_produtos as p on (i.produto_id = p.id) where i.venda_id = ?";

			PreparedStatement ps = conexao.prepareStatement(sql);
			int codigo = '?';
			ps.setInt(1, codigo);

			ResultSet rs = ps.executeQuery();// sempre criar esse objeto e ele reccebe essa execução (sql)

			while (rs.next()) {

				AluguelVO item = new AluguelVO();
				Aluguel servicos = new Aluguel();

				item.setCodigo(rs.getInt("codigo"));
				item.setNome(rs.getString("nome"));
				item.setQuantidade(rs.getInt("quantidade"));
				item.setValorUnit(rs.getFloat("valorUnit"));
			}
			return lista;
		} catch (SQLException erro) {

			JOptionPane.showMessageDialog(null, "Erro" + erro);
			return null;
		}

	}

	public AluguelVO BuscaPorCodigo(int parseInt) {
		// TODO Auto-generated method stub
		return null;
	}

	public AluguelVO BuscarServicos(int parseInt) {
		// TODO Auto-generated method stub
		return null;
	}

	public void consultarDadosNaView() {
		String url = "jdbc:mysql://localhost:3306/tasktide";
		String usuario = "root";
		String senha = "root";

		try (Connection connection = DriverManager.getConnection(url, usuario, senha)) {
			String sql = "SELECT codigo, nome, total FROM evento_aluguel_view";
			try (PreparedStatement statement = connection.prepareStatement(sql)) {
				ResultSet resultSet = statement.executeQuery();

				while (resultSet.next()) {
					String codigoEvento = resultSet.getString("codigo");
					String nomeEvento = resultSet.getString("nome");
					double totalAluguel = resultSet.getDouble("total");

					// Exibir os dados usando JOptionPane
					String mensagem = "Código do Evento: " + codigoEvento + "\n" + "Nome do Evento: " + nomeEvento
							+ "\n" + "Total do Aluguel: " + totalAluguel;
					JOptionPane.showMessageDialog(null, mensagem, "Dados do Evento e Aluguel",
							JOptionPane.INFORMATION_MESSAGE);
				}
			}
		} catch (SQLException e) {
			// Lidar com exceções e mostrar mensagens de erro com JOptionPane
			JOptionPane.showMessageDialog(null, "Ocorreu um erro ao consultar os dados:\n" + e.getMessage(), "Erro",
					JOptionPane.ERROR_MESSAGE);
		}
	}
}
