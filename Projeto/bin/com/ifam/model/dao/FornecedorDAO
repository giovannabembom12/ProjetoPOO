package com.model.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import com.view.Menu;

public class FornecedorDAO {

    public void configurarComboBox(javax.swing.JComboBox<String> cbEspecificacao) {
        String[] opcoes = { "Decoração", "Móveis", "Vestuário", "Alimentação", "Estruturas", "Eletrônicos" };
        DefaultComboBoxModel<String> modeloComboBox = new DefaultComboBoxModel<>(opcoes);
        cbEspecificacao.setModel(modeloComboBox);
    }

    public void btnSalvarActionPerformed(java.awt.event.ActionEvent evt, javax.swing.JTextField txtNome,
            javax.swing.JComboBox<String> cbEspecificacao, javax.swing.JTextField txtEmail,
            javax.swing.JTextField txtTelefone, javax.swing.JTextField txtObservacoes, JTable tblFornecedor) {

        String nome = txtNome.getText();
        String especificacao = (String) cbEspecificacao.getSelectedItem();
        String email = txtEmail.getText();
        String telefone = txtTelefone.getText();
        String observacoes = txtObservacoes.getText();

        if (inserirFornecedor(nome, especificacao, email, telefone, observacoes)) {
            atualizarTabelaFornecedores(tblFornecedor);
        }
    }

    public boolean inserirFornecedor(String nome, String especificacao, String email, String telefone,
            String observacoes) {
        String url = "jdbc:mysql://localhost:3306/tasktide";
        String usuario = "root";
        String senha = "root";

        try (Connection conexao = DriverManager.getConnection(url, usuario, senha)) {
            String query = "INSERT INTO tbfornecedor (nome, especificacao, email, telefone, observacoes) VALUES (?, ?, ?, ?, ?)";
            try (PreparedStatement pst = conexao.prepareStatement(query)) {
                pst.setString(1, nome);
                pst.setString(2, especificacao);
                pst.setString(3, email);
                pst.setString(4, telefone);
                pst.setString(5, observacoes);

                int rowsAffected = pst.executeUpdate();
                return rowsAffected > 0; 
            }
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    }

    public void atualizarTabelaFornecedores(JTable tblFornecedor) {
        DefaultTableModel model = (DefaultTableModel) tblFornecedor.getModel();
        model.setRowCount(0); 

        String url = "jdbc:mysql://localhost:3306/tasktide";
        String usuario = "root";
        String senha = "root";

        try (Connection conexao = DriverManager.getConnection(url, usuario, senha)) {
            String query = "SELECT codigo, nome, especificacao, email, telefone, observacoes FROM tbfornecedor";
            try (PreparedStatement pst = conexao.prepareStatement(query)) {
                try (ResultSet rs = pst.executeQuery()) {
                    while (rs.next()) {
                        String codigo = rs.getString("codigo");
                        String nomeFornecedor = rs.getString("nome");
                        String especificacao = rs.getString("especificacao");
                        String email = rs.getString("email");
                        String telefone = rs.getString("telefone");
                        String observacoes = rs.getString("observacoes");

                        String[] rowData = { codigo, nomeFornecedor, especificacao, email, telefone, observacoes };
                        model.addRow(rowData);
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void buscarFornecedorPorNome(String nome, JTable tblFornecedor) {
        DefaultTableModel model = (DefaultTableModel) tblFornecedor.getModel();
        model.setRowCount(0);

        String url = "jdbc:mysql://localhost:3306/tasktide";
        String usuario = "root";
        String senha = "root";

        try (Connection conexao = DriverManager.getConnection(url, usuario, senha)) {
            String query = "SELECT codigo, nome, especificacao, email, telefone, observacoes FROM tbfornecedor WHERE nome LIKE ?";
            try (PreparedStatement pst = conexao.prepareStatement(query)) {
                pst.setString(1, "%" + nome + "%"); // Usa % para buscar por parte do nome
                try (ResultSet rs = pst.executeQuery()) {
                    while (rs.next()) {
                        String codigo = rs.getString("codigo");
                        String nomeFornecedor = rs.getString("nome");
                        String especificacao = rs.getString("especificacao");
                        String email = rs.getString("email");
                        String telefone = rs.getString("telefone");
                        String observacoes = rs.getString("observacoes");

                        String[] rowData = { codigo, nomeFornecedor, especificacao, email, telefone, observacoes };
                        model.addRow(rowData);
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void excluirFornecedor(JTable tblFornecedor) {
        int selectedRow = tblFornecedor.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Por favor, selecione um fornecedor para excluir.", "Aviso",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        int confirmacao = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir este fornecedor?",
                "Confirmação", JOptionPane.YES_NO_OPTION);
        if (confirmacao != JOptionPane.YES_OPTION) {
            return; 
        }

        DefaultTableModel model = (DefaultTableModel) tblFornecedor.getModel();
        String codigo = (String) model.getValueAt(selectedRow, 0);

        String url = "jdbc:mysql://localhost:3306/tasktide";
        String usuario = "root";
        String senha = "root";

        try (Connection conexao = DriverManager.getConnection(url, usuario, senha)) {
            String query = "DELETE FROM tbfornecedor WHERE codigo = ?";
            try (PreparedStatement pst = conexao.prepareStatement(query)) {
                pst.setString(1, codigo);
                pst.executeUpdate();
            }

            atualizarTabelaFornecedores(tblFornecedor);
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao excluir fornecedor.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void editarFornecedor(JTable tblFornecedor, javax.swing.JTextField txtNome,
            javax.swing.JComboBox<String> cbEspecificacao, javax.swing.JTextField txtEmail,
            javax.swing.JTextField txtTelefone, javax.swing.JTextField txtObservacoes) {
        int selectedRow = tblFornecedor.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Por favor, selecione um fornecedor para editar.", "Aviso",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblFornecedor.getModel();
        String nome = (String) model.getValueAt(selectedRow, 1);
        String especificacao = (String) model.getValueAt(selectedRow, 2);
        String email = (String) model.getValueAt(selectedRow, 3);
        String telefone = (String) model.getValueAt(selectedRow, 4);
        String observacoes = (String) model.getValueAt(selectedRow, 5);

        txtNome.setText(nome);
        cbEspecificacao.setSelectedItem(especificacao);
        txtEmail.setText(email);
        txtTelefone.setText(telefone);
        txtObservacoes.setText(observacoes);

        txtNome.setEditable(true);
        cbEspecificacao.setEnabled(true); 
        txtEmail.setEditable(true);
        txtTelefone.setEditable(true);
        txtObservacoes.setEditable(true);
    }

    public void btnEditarActionPerformed(java.awt.event.ActionEvent evt, JTable tblFornecedor,
            javax.swing.JTextField txtNome, javax.swing.JComboBox<String> cbEspecificacao,
            javax.swing.JTextField txtEmail, javax.swing.JTextField txtTelefone, javax.swing.JTextField txtObservacoes) {
        editarFornecedor(tblFornecedor, txtNome, cbEspecificacao, txtEmail, txtTelefone, txtObservacoes);
    }

    public void btnSalvarAltActionPerformed(java.awt.event.ActionEvent evt, JTable tblFornecedor,
            javax.swing.JTextField txtNome, javax.swing.JTextField txtEmail, javax.swing.JTextField txtTelefone,
            javax.swing.JTextField txtObservacoes) {
        int selectedRow = tblFornecedor.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Por favor, selecione um fornecedor para editar.", "Aviso",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        int confirmacao = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja salvar as alterações?",
                "Confirmação", JOptionPane.YES_NO_OPTION);
        if (confirmacao != JOptionPane.YES_OPTION) {
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblFornecedor.getModel();
        String nome = (String) model.getValueAt(selectedRow, 1); 

        String url = "jdbc:mysql://localhost:3306/tasktide";
        String usuario = "root";
        String senha = "root";

        try (Connection conexao = DriverManager.getConnection(url, usuario, senha)) {
            String query = "UPDATE tbfornecedor SET nome = ?, email = ?, telefone = ?, observacoes = ? WHERE codigo = ?";
            try (PreparedStatement pst = conexao.prepareStatement(query)) {
                pst.setString(1, txtNome.getText());
                pst.setString(2, txtEmail.getText());
                pst.setString(3, txtTelefone.getText());
                pst.setString(4, txtObservacoes.getText());
                pst.setString(5, nome);
                pst.executeUpdate();
            }

            atualizarTabelaFornecedores(tblFornecedor);
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao editar fornecedor.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void limparCampos(javax.swing.JTextField txtNome, javax.swing.JComboBox<String> cbEspecificacao,
            javax.swing.JTextField txtEmail, javax.swing.JTextField txtTelefone, javax.swing.JTextField txtObservacoes) {
        txtNome.setText("");
        cbEspecificacao.setSelectedIndex(0);
        txtEmail.setText("");
        txtTelefone.setText("");
        txtObservacoes.setText("");
    }
}

