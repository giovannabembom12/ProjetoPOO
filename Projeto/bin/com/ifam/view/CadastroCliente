package com.view;

import java.sql.Connection;
import java.util.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lilian
 */
public class CadastroCliente extends javax.swing.JFrame {

    /**
     * Creates new form CadastroCliente
     */
    public CadastroCliente() {
        initComponents();
        atualizarTabelaClientes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblLogo = new javax.swing.JLabel();
        btnSobreNos = new javax.swing.JButton();
        btnConfiguracoes = new javax.swing.JButton();
        btnManual = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        lblCadastro = new javax.swing.JLabel();
        lblDescricao = new javax.swing.JLabel();
        btnVoltar = new javax.swing.JButton();
        btnCadastrar = new javax.swing.JButton();
        lblNome = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblTelefone = new javax.swing.JLabel();
        lblNascimento = new javax.swing.JLabel();
        lblCPF = new javax.swing.JLabel();
        lblEndereco = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtTelefone = new javax.swing.JTextField();
        txtCPF = new javax.swing.JTextField();
        txtNascimento = new javax.swing.JTextField();
        txtEndereço = new javax.swing.JTextField();
        txtCelular = new javax.swing.JTextField();
        lblCelular = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCliente = new javax.swing.JTable();
        txtBuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setExtendedState(6);
        setMaximumSize(new java.awt.Dimension(1024, 768));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(800, 600));

        jPanel1.setBackground(new java.awt.Color(22, 43, 64));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        lblLogo.setIcon(new javax.swing.ImageIcon("C:\\Users\\PC\\Downloads\\LogoComFonte.png")); // NOI18N

        btnSobreNos.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSobreNos.setIcon(new javax.swing.ImageIcon("C:\\Users\\PC\\Downloads\\IconeSobreNos.png")); // NOI18N
        btnSobreNos.setText(" Sobre Nós");
        btnSobreNos.setBorder(null);
        btnSobreNos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSobreNosActionPerformed(evt);
            }
        });

        btnConfiguracoes.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnConfiguracoes.setIcon(new javax.swing.ImageIcon("C:\\Users\\PC\\Downloads\\IconeEngrenagem.png")); // NOI18N
        btnConfiguracoes.setText(" Configuração e Suporte");
        btnConfiguracoes.setBorder(null);
        btnConfiguracoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfiguracoesActionPerformed(evt);
            }
        });

        btnManual.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnManual.setIcon(new javax.swing.ImageIcon("C:\\Users\\PC\\Downloads\\IconeManualUsuario.png")); // NOI18N
        btnManual.setText(" Manual do Usuário");
        btnManual.setBorder(null);
        btnManual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManualActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lblLogo)
                .addGap(309, 309, 309)
                .addComponent(btnSobreNos)
                .addGap(120, 120, 120)
                .addComponent(btnConfiguracoes)
                .addGap(120, 120, 120)
                .addComponent(btnManual)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSobreNos)
                    .addComponent(btnConfiguracoes)
                    .addComponent(btnManual))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        lblCadastro.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        lblCadastro.setText("Cadastro de Clientes");

        lblDescricao.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblDescricao.setForeground(new java.awt.Color(102, 102, 102));
        lblDescricao.setText("Os campos abaixo serão utilizados para cadastrar clientes no sistema.");

        btnVoltar.setBackground(new java.awt.Color(22, 43, 64));
        btnVoltar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnVoltar.setForeground(new java.awt.Color(255, 255, 255));
        btnVoltar.setIcon(new javax.swing.ImageIcon("C:\\Users\\PC\\Downloads\\IconeVoltar.png")); // NOI18N
        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	btnVoltarActionPerformed(evt);
            }
        });

        btnCadastrar.setBackground(new java.awt.Color(22, 43, 64));
        btnCadastrar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCadastrar.setForeground(new java.awt.Color(255, 255, 255));
        btnCadastrar.setIcon(new javax.swing.ImageIcon("C:\\Users\\PC\\Downloads\\IconeSalvar.png")); // NOI18N
        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        lblNome.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNome.setText("Nome Completo: ");

        lblEmail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblEmail.setText("Endereço de E-mail:");

        lblTelefone.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblTelefone.setText("Telefone:");

        lblNascimento.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNascimento.setText("Data de Nascimento:");

        lblCPF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCPF.setText("CPF:");

        lblEndereco.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblEndereco.setText("Endereço:");

        txtNome.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });

        txtEmail.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        txtTelefone.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtTelefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefoneActionPerformed(evt);
            }
        });

        txtCPF.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        txtNascimento.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtNascimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNascimentoActionPerformed(evt);
            }
        });

        txtEndereço.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        txtCelular.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtCelular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCelularActionPerformed(evt);
            }
        });

        lblCelular.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblCelular.setText("Celular:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblCadastro)
                .addGap(147, 147, 147))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblDescricao)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(lblNome)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(lblEmail)
                                .addGap(18, 18, 18)
                                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(lblTelefone)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblCelular)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCelular))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(lblNascimento)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblCPF)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(lblEndereco)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEndereço, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(0, 60, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(lblCadastro)
                .addGap(18, 18, 18)
                .addComponent(lblDescricao)
                .addGap(51, 51, 51)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNome)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmail)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNascimento)
                    .addComponent(txtNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCPF)
                    .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTelefone)
                    .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCelular)
                    .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEndereco)
                    .addComponent(txtEndereço, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastrar)
                    .addComponent(btnVoltar))
                .addGap(41, 41, 41))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setPreferredSize(new java.awt.Dimension(490, 500));

        tblCliente.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        tblCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome ", "E-mail", "Dt. de Nasc.", "CPF", "Telefone", "Celular", "Endereço"
            }
        ));
        jScrollPane1.setViewportView(tblCliente);

        txtBuscar.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });

        btnBuscar.setBackground(new java.awt.Color(22, 43, 64));
        btnBuscar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnBuscarActionPerformed(evt);
        }
    });

        btnEditar.setBackground(new java.awt.Color(22, 43, 64));
        btnEditar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEditar.setForeground(new java.awt.Color(255, 255, 255));
        btnEditar.setIcon(new javax.swing.ImageIcon("C:\\Users\\PC\\Downloads\\IconeEditar.png")); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnExcluir.setBackground(new java.awt.Color(22, 43, 64));
        btnExcluir.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnExcluir.setForeground(new java.awt.Color(255, 255, 255));
        btnExcluir.setIcon(new javax.swing.ImageIcon("C:\\Users\\PC\\Downloads\\IconeExcluir.png")); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnSalvar.setBackground(new java.awt.Color(22, 43, 64));
        btnSalvar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSalvar.setForeground(new java.awt.Color(255, 255, 255));
        btnSalvar.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                        new java.net.URL("file:/C:/Users/PC/Downloads/IconeSalvarAlt.png")
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());
        btnSalvar.setText("Salvar Alterações");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSalvar)
                .addGap(18, 18, 18)
                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 593, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(txtBuscar)
                        .addGap(18, 18, 18)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(48, 48, 48))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(64, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExcluir)
                    .addComponent(btnEditar)
                    .addComponent(btnSalvar))
                .addGap(35, 35, 35))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 692, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setBounds(0, 0, 1316, 698);
    }// </editor-fold>                         

    private void btnConfiguracoesActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
    }                                                

    private void btnManualActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                             
    
    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {                                          
    	Menu menu = new Menu();
		menu.setVisible(true);
		this.dispose();
    } 

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }   
    
    private void btnSobreNosActionPerformed(java.awt.event.ActionEvent evt) {                                          
    	SobreNos sobrenos = new SobreNos();
		sobrenos.setVisible(true);
		this.dispose();
    }   

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {
        // Obtém o modelo da tabela
        DefaultTableModel model = (DefaultTableModel) tblCliente.getModel();

        // Verifica se uma linha está selecionada
        int selectedRow = tblCliente.getSelectedRow();
        if (selectedRow == -1) {
            // Nenhuma linha selecionada, exibe uma mensagem de erro
            JOptionPane.showMessageDialog(this, "Selecione uma linha para excluir.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Confirmação antes de excluir
        int choice = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja excluir esta linha?", "Confirmação",
                JOptionPane.YES_NO_OPTION);

        if (choice == JOptionPane.YES_OPTION) {
            // Obtém o código do cliente selecionado na tabela
            int codigoCliente = (int) model.getValueAt(selectedRow, 0); // Supondo que a coluna 0 contenha o código do cliente

            // Exclui o cliente do banco de dados
            if (excluirCliente(codigoCliente)) {
                // Remove a linha selecionada do modelo da tabela
                model.removeRow(selectedRow);
                JOptionPane.showMessageDialog(this, "Cliente excluído com sucesso!");
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao excluir o cliente. Verifique os dados e tente novamente.", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private boolean excluirCliente(int codigoCliente) {
        try {
            Connection conexao = DriverManager.getConnection("jdbc:mysql://localhost:3306/tasktide", "root", "root");
            String query = "DELETE FROM tbcliente WHERE codigo=?";
            
            try (PreparedStatement preparedStatement = conexao.prepareStatement(query)) {
                preparedStatement.setInt(1, codigoCliente);
                preparedStatement.executeUpdate();
            }
            
            conexao.close();
            return true;
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    }                    

    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void txtNascimentoActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
    }                                             

    private void txtTelefoneActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void txtCelularActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }
    
    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {
        String nome = txtNome.getText();
        String email = txtEmail.getText();
        String celular = txtCelular.getText();
        String telefone = txtTelefone.getText();
        String cpf = txtCPF.getText();
        String endereco = txtEndereço.getText();
        String dtnasc = txtNascimento.getText();

        // Formatando a data para o formato correto
        String dataFormatada = formatarData(dtnasc);

        if (inserirCliente(nome, email, celular, telefone, cpf, endereco, dataFormatada)) {
            JOptionPane.showMessageDialog(this, "Cliente cadastrado com sucesso!");
            limparCampos();
            atualizarTabelaClientes();
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao cadastrar o cliente. Verifique os dados e tente novamente.");
        }
    }

    private boolean inserirCliente(String nome, String email, String celular, String telefone, String cpf, String endereco, String dtnasc) {
        try {
            Connection conexao = DriverManager.getConnection("jdbc:mysql://localhost:3306/tasktide", "root", "root");
            String query = "INSERT INTO tbcliente (nome, email, celular, telefone, cpf, endereco, dtnasc) VALUES (?, ?, ?, ?, ?, ?, ?)";
            
            // Use PreparedStatement para evitar SQL Injection
            try (PreparedStatement preparedStatement = conexao.prepareStatement(query)) {
                preparedStatement.setString(1, nome);
                preparedStatement.setString(2, email);
                preparedStatement.setString(3, celular);
                preparedStatement.setString(4, telefone);
                preparedStatement.setString(5, cpf);
                preparedStatement.setString(6, endereco);
                
                // Agora, passamos a data formatada para o PreparedStatement
                preparedStatement.setString(7, dtnasc);
                
                preparedStatement.executeUpdate();
            }
            
            conexao.close();
            return true;
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    }

    private String formatarData(String data) {
        try {
            SimpleDateFormat formatoEntrada = new SimpleDateFormat("dd/MM/yyyy");
            SimpleDateFormat formatoSaida = new SimpleDateFormat("yyyy-MM-dd");
            Date date = formatoEntrada.parse(data);
            return formatoSaida.format(date);
        } catch (ParseException e) {
            e.printStackTrace();
            return null;
        }
    }
    
    private void atualizarTabelaClientes() {
        DefaultTableModel model = (DefaultTableModel) tblCliente.getModel();
        model.setRowCount(0); // Limpa a tabela antes de preenchê-la novamente

        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tasktide", "root", "root");
            String query = "SELECT * FROM tbcliente";
            try (PreparedStatement pst = con.prepareStatement(query)) {
                ResultSet rs = pst.executeQuery();

                while (rs.next()) {
                    int codigo = rs.getInt("codigo");
                    String nome = rs.getString("nome");
                    String email = rs.getString("email");
                    String dtnasc = rs.getString("dtnasc");
                    String cpf = rs.getString("cpf");
                    String telefone = rs.getString("telefone");
                    String celular = rs.getString("celular");
                    String endereco = rs.getString("endereco");

                    model.addRow(new Object[]{codigo, nome, email, dtnasc, cpf, telefone, celular, endereco});
                }
            }
            con.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    private void limparCampos() {
        txtNome.setText("");
        txtEmail.setText("");
        txtCelular.setText("");
        txtTelefone.setText("");
        txtCPF.setText("");
        txtEndereço.setText("");
        txtNascimento.setText("");
    }
    
    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {
        String termoPesquisa = txtBuscar.getText();

        if (!termoPesquisa.isEmpty()) {
            atualizarTabelaClientesPesquisa(termoPesquisa);
        } else {
            JOptionPane.showMessageDialog(this, "Digite um nome ou CPF para buscar.");
        }
    }

    private void atualizarTabelaClientesPesquisa(String termoPesquisa) {
        DefaultTableModel model = (DefaultTableModel) tblCliente.getModel();
        model.setRowCount(0); // Limpa a tabela antes de preenchê-la novamente

        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tasktide", "root", "root");
            String query = "SELECT * FROM tbcliente WHERE nome LIKE ? OR cpf LIKE ?";
            
            try (PreparedStatement pst = con.prepareStatement(query)) {
                pst.setString(1, "%" + termoPesquisa + "%");
                pst.setString(2, "%" + termoPesquisa + "%");

                ResultSet rs = pst.executeQuery();

                while (rs.next()) {
                    int codigo = rs.getInt("codigo");
                    String nome = rs.getString("nome");
                    String email = rs.getString("email");
                    String dtnasc = rs.getString("dtnasc");
                    String cpf = rs.getString("cpf");
                    String telefone = rs.getString("telefone");
                    String celular = rs.getString("celular");
                    String endereco = rs.getString("endereco");

                    model.addRow(new Object[]{codigo, nome, email, dtnasc, cpf, telefone, celular, endereco});
                }
            }
            con.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    
    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {
        // Obtém o modelo da tabela
        DefaultTableModel model = (DefaultTableModel) tblCliente.getModel();

        // Verifica se uma linha está selecionada
        int selectedRow = tblCliente.getSelectedRow();
        if (selectedRow == -1) {
            // Nenhuma linha selecionada, exibe uma mensagem de erro
            JOptionPane.showMessageDialog(this, "Selecione uma linha para editar.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Obtém o código do cliente selecionado na tabela
        int codigoCliente = (int) model.getValueAt(selectedRow, 0); // Supondo que a coluna 0 contenha o código do cliente

        // Preenche os campos de edição com os dados do cliente selecionado na tabela
        preencherCamposEdicao(codigoCliente);

        // Agora, ao clicar no botão editar, não exibe a confirmação imediatamente
    }

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {
        // Obtém o modelo da tabela
        DefaultTableModel model = (DefaultTableModel) tblCliente.getModel();

        // Verifica se uma linha está selecionada
        int selectedRow = tblCliente.getSelectedRow();
        if (selectedRow == -1) {
            // Nenhuma linha selecionada, exibe uma mensagem de erro
            JOptionPane.showMessageDialog(this, "Selecione uma linha para salvar as alterações.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Obtém o código do cliente selecionado na tabela
        int codigoCliente = (int) model.getValueAt(selectedRow, 0); // Supondo que a coluna 0 contenha o código do cliente

        // Executa a edição no banco de dados
        if (editarCliente(codigoCliente)) {
            JOptionPane.showMessageDialog(this, "Alterações salvas com sucesso!");
            limparCampos();
            atualizarTabelaClientes();
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao salvar as alterações. Verifique os dados e tente novamente.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }


    private void confirmarEdicao(int codigoCliente) {
        // Executa a edição no banco de dados
        if (editarCliente(codigoCliente)) {
            JOptionPane.showMessageDialog(this, "Cliente editado com sucesso!");
            limparCampos();
            atualizarTabelaClientes();
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao editar o cliente. Verifique os dados e tente novamente.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }


    private void preencherCamposEdicao(int codigoCliente) {
        try {
            Connection conexao = DriverManager.getConnection("jdbc:mysql://localhost:3306/tasktide", "root", "root");
            String query = "SELECT * FROM tbcliente WHERE codigo=?";
            
            try (PreparedStatement preparedStatement = conexao.prepareStatement(query)) {
                preparedStatement.setInt(1, codigoCliente);
                ResultSet rs = preparedStatement.executeQuery();

                if (rs.next()) {
                    // Preencher os campos de edição com os dados do cliente
                    txtNome.setText(rs.getString("nome"));
                    txtEmail.setText(rs.getString("email"));
                    txtCelular.setText(rs.getString("celular"));
                    txtTelefone.setText(rs.getString("telefone"));
                    txtCPF.setText(rs.getString("cpf"));
                    txtEndereço.setText(rs.getString("endereco"));
                    
                    // Formatando a data para o formato correto
                    SimpleDateFormat formatoSaida = new SimpleDateFormat("dd/MM/yyyy");
                    Date date = rs.getDate("dtnasc");
                    String dataFormatada = formatoSaida.format(date);
                    txtNascimento.setText(dataFormatada);
                }
            }
            
            conexao.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private boolean editarCliente(int codigoCliente) {
        try {
            // Obtenha os dados dos campos de edição conforme necessário
            String nome = txtNome.getText();
            String email = txtEmail.getText();
            String celular = txtCelular.getText();
            String telefone = txtTelefone.getText();
            String cpf = txtCPF.getText();
            String endereco = txtEndereço.getText();
            String dtnasc = txtNascimento.getText();

            // Formate a data para o formato correto
            String dataFormatada = formatarData(dtnasc);

            // Exibe um JOptionPane para confirmar as alterações
            int option = JOptionPane.showConfirmDialog(this, "Deseja salvar as alterações?", "Confirmação", JOptionPane.YES_NO_OPTION);

            if (option == JOptionPane.YES_OPTION) {
                // Executa a edição no banco de dados
                Connection conexao = DriverManager.getConnection("jdbc:mysql://localhost:3306/tasktide", "root", "root");
                String query = "UPDATE tbcliente SET nome=?, email=?, celular=?, telefone=?, cpf=?, endereco=?, dtnasc=? WHERE codigo=?";

                try (PreparedStatement preparedStatement = conexao.prepareStatement(query)) {
                    preparedStatement.setString(1, nome);
                    preparedStatement.setString(2, email);
                    preparedStatement.setString(3, celular);
                    preparedStatement.setString(4, telefone);
                    preparedStatement.setString(5, cpf);
                    preparedStatement.setString(6, endereco);
                    preparedStatement.setString(7, dataFormatada);

                    preparedStatement.setInt(8, codigoCliente);

                    preparedStatement.executeUpdate();
                }

                conexao.close();
                return true;
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return false;
    }                                                                            

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnConfiguracoes;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnManual;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnSobreNos;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCPF;
    private javax.swing.JLabel lblCadastro;
    private javax.swing.JLabel lblCelular;
    private javax.swing.JLabel lblDescricao;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEndereco;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblNascimento;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblTelefone;
    private javax.swing.JTable tblCliente;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCPF;
    private javax.swing.JTextField txtCelular;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEndereço;
    private javax.swing.JTextField txtNascimento;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtTelefone;
    // End of variables declaration                   
}
